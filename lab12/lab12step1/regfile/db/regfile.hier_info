|regfile
DATAP3 <= Mux8_4b:my_muxP.f
DATAP2 <= Mux8_4b:my_muxP.f
DATAP1 <= Mux8_4b:my_muxP.f
DATAP0 <= Mux8_4b:my_muxP.f
DATAQ3 <= <GND>
DATAQ2 <= <GND>
DATAQ1 <= <GND>
DATAQ0 <= <GND>
RP2 => RP2.IN1
RP1 => RP1.IN1
RP0 => RP0.IN1
RQ2 => ~NO_FANOUT~
RQ1 => ~NO_FANOUT~
RQ0 => ~NO_FANOUT~
WA2 => ~NO_FANOUT~
WA1 => ~NO_FANOUT~
WA0 => ~NO_FANOUT~
LD_DATA[0] => LD_DATA[0].IN1
LD_DATA[1] => LD_DATA[1].IN1
LD_DATA[2] => LD_DATA[2].IN1
LD_DATA[3] => LD_DATA[3].IN1
WR => WR.IN1
CLRN => CLRN.IN1
CLK => ~NO_FANOUT~


|regfile|Decoder3to8:my_decoder
x0 => Decoder0.IN0
x1 => Decoder0.IN1
x2 => Decoder0.IN2
w0 <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
w1 <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
w2 <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
w3 <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
w4 <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
w5 <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
w6 <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
w7 <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
en => Decoder0.IN3


|regfile|reg4:my_reg0
out[0] <= register:inst3.output
out[1] <= register:inst2.output
out[2] <= register:inst1.output
out[3] <= register:inst.output
in[0] => register:inst3.input
in[1] => register:inst2.input
in[2] => register:inst1.input
in[3] => register:inst.input
load => register:inst.load
load => register:inst1.load
load => register:inst2.load
load => register:inst2.clock
load => register:inst3.load
clock => register:inst.clock
clock => register:inst1.clock
clock => register:inst3.clock
clrn => register:inst.clrn
clrn => register:inst1.clrn
clrn => register:inst2.clrn
clrn => register:inst3.clrn


|regfile|reg4:my_reg0|register:inst
output <= inst2.DB_MAX_OUTPUT_PORT_TYPE
clrn => inst2.ACLR
clock => inst2.CLK
input => 2to1mux:inst.x1
load => 2to1mux:inst.select


|regfile|reg4:my_reg0|register:inst|2to1mux:inst
out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
x1 => inst1.IN0
select => inst1.IN1
select => inst3.IN0
x0 => inst.IN0


|regfile|reg4:my_reg0|register:inst1
output <= inst2.DB_MAX_OUTPUT_PORT_TYPE
clrn => inst2.ACLR
clock => inst2.CLK
input => 2to1mux:inst.x1
load => 2to1mux:inst.select


|regfile|reg4:my_reg0|register:inst1|2to1mux:inst
out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
x1 => inst1.IN0
select => inst1.IN1
select => inst3.IN0
x0 => inst.IN0


|regfile|reg4:my_reg0|register:inst2
output <= inst2.DB_MAX_OUTPUT_PORT_TYPE
clrn => inst2.ACLR
clock => inst2.CLK
input => 2to1mux:inst.x1
load => 2to1mux:inst.select


|regfile|reg4:my_reg0|register:inst2|2to1mux:inst
out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
x1 => inst1.IN0
select => inst1.IN1
select => inst3.IN0
x0 => inst.IN0


|regfile|reg4:my_reg0|register:inst3
output <= inst2.DB_MAX_OUTPUT_PORT_TYPE
clrn => inst2.ACLR
clock => inst2.CLK
input => 2to1mux:inst.x1
load => 2to1mux:inst.select


|regfile|reg4:my_reg0|register:inst3|2to1mux:inst
out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
x1 => inst1.IN0
select => inst1.IN1
select => inst3.IN0
x0 => inst.IN0


|regfile|Mux8_4b:my_muxP
s0 => mux1[3].OUTPUTSELECT
s0 => mux1[2].OUTPUTSELECT
s0 => mux1[1].OUTPUTSELECT
s0 => mux1[0].OUTPUTSELECT
s0 => mux2[3].OUTPUTSELECT
s0 => mux2[2].OUTPUTSELECT
s0 => mux2[1].OUTPUTSELECT
s0 => mux2[0].OUTPUTSELECT
s0 => mux3[3].OUTPUTSELECT
s0 => mux3[2].OUTPUTSELECT
s0 => mux3[1].OUTPUTSELECT
s0 => mux3[0].OUTPUTSELECT
s0 => mux4[3].OUTPUTSELECT
s0 => mux4[2].OUTPUTSELECT
s0 => mux4[1].OUTPUTSELECT
s0 => mux4[0].OUTPUTSELECT
s1 => mux5[3].OUTPUTSELECT
s1 => mux5[2].OUTPUTSELECT
s1 => mux5[1].OUTPUTSELECT
s1 => mux5[0].OUTPUTSELECT
s1 => mux6[3].OUTPUTSELECT
s1 => mux6[2].OUTPUTSELECT
s1 => mux6[1].OUTPUTSELECT
s1 => mux6[0].OUTPUTSELECT
s2 => f.OUTPUTSELECT
s2 => f.OUTPUTSELECT
s2 => f.OUTPUTSELECT
s2 => f.OUTPUTSELECT
w0[0] => mux1[0].DATAA
w0[1] => mux1[1].DATAA
w0[2] => mux1[2].DATAA
w0[3] => mux1[3].DATAA
w1[0] => mux1[0].DATAB
w1[1] => mux1[1].DATAB
w1[2] => mux1[2].DATAB
w1[3] => mux1[3].DATAB
w2[0] => mux2[0].DATAA
w2[1] => mux2[1].DATAA
w2[2] => mux2[2].DATAA
w2[3] => mux2[3].DATAA
w3[0] => mux2[0].DATAB
w3[1] => mux2[1].DATAB
w3[2] => mux2[2].DATAB
w3[3] => mux2[3].DATAB
w4[0] => mux3[0].DATAA
w4[1] => mux3[1].DATAA
w4[2] => mux3[2].DATAA
w4[3] => mux3[3].DATAA
w5[0] => mux3[0].DATAB
w5[1] => mux3[1].DATAB
w5[2] => mux3[2].DATAB
w5[3] => mux3[3].DATAB
w6[0] => mux4[0].DATAA
w6[1] => mux4[1].DATAA
w6[2] => mux4[2].DATAA
w6[3] => mux4[3].DATAA
w7[0] => mux4[0].DATAB
w7[1] => mux4[1].DATAB
w7[2] => mux4[2].DATAB
w7[3] => mux4[3].DATAB
f[0] <= f.DB_MAX_OUTPUT_PORT_TYPE
f[1] <= f.DB_MAX_OUTPUT_PORT_TYPE
f[2] <= f.DB_MAX_OUTPUT_PORT_TYPE
f[3] <= f.DB_MAX_OUTPUT_PORT_TYPE


