|reg4
out[0] <= register:inst3.output
out[1] <= register:inst2.output
out[2] <= register:inst1.output
out[3] <= register:inst.output
in[0] => register:inst3.input
in[1] => register:inst2.input
in[2] => register:inst1.input
in[3] => register:inst.input
load => register:inst.load
load => register:inst1.load
load => register:inst2.load
load => register:inst3.load
clock => register:inst.clock
clock => register:inst1.clock
clock => register:inst2.clock
clock => register:inst3.clock
clrn => register:inst.clrn
clrn => register:inst1.clrn
clrn => register:inst2.clrn
clrn => register:inst3.clrn


|reg4|register:inst
output <= inst2.DB_MAX_OUTPUT_PORT_TYPE
clrn => inst2.ACLR
clock => inst2.CLK
input => 2to1mux:inst.x1
load => 2to1mux:inst.select


|reg4|register:inst|2to1mux:inst
out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
x1 => inst1.IN0
select => inst1.IN1
select => inst3.IN0
x0 => inst.IN0


|reg4|register:inst1
output <= inst2.DB_MAX_OUTPUT_PORT_TYPE
clrn => inst2.ACLR
clock => inst2.CLK
input => 2to1mux:inst.x1
load => 2to1mux:inst.select


|reg4|register:inst1|2to1mux:inst
out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
x1 => inst1.IN0
select => inst1.IN1
select => inst3.IN0
x0 => inst.IN0


|reg4|register:inst2
output <= inst2.DB_MAX_OUTPUT_PORT_TYPE
clrn => inst2.ACLR
clock => inst2.CLK
input => 2to1mux:inst.x1
load => 2to1mux:inst.select


|reg4|register:inst2|2to1mux:inst
out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
x1 => inst1.IN0
select => inst1.IN1
select => inst3.IN0
x0 => inst.IN0


|reg4|register:inst3
output <= inst2.DB_MAX_OUTPUT_PORT_TYPE
clrn => inst2.ACLR
clock => inst2.CLK
input => 2to1mux:inst.x1
load => 2to1mux:inst.select


|reg4|register:inst3|2to1mux:inst
out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
x1 => inst1.IN0
select => inst1.IN1
select => inst3.IN0
x0 => inst.IN0


